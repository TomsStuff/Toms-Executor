local player = game.Players.LocalPlayer
local mouse = player:GetMouse()
local camera = game.Workspace.CurrentCamera
local runService = game:GetService("RunService")
local userInputService = game:GetService("UserInputService")

local isLockingEnabled = false
local isScriptEnabled = true  -- Variable to track if the script is enabled

-- Function to get the closest player to the mouse position
local function getClosestPlayerToMouse()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("Head") then
            local head = otherPlayer.Character.Head
            local screenPoint = camera:WorldToScreenPoint(head.Position)
            local mousePos = Vector2.new(mouse.X, mouse.Y)
            local distance = (Vector2.new(screenPoint.X, screenPoint.Y) - mousePos).magnitude

            if screenPoint.Z > 0 and screenPoint.X >= 0 and screenPoint.X <= camera.ViewportSize.X and screenPoint.Y >= 0 and screenPoint.Y <= camera.ViewportSize.Y then
                if distance < shortestDistance then
                    shortestDistance = distance
                    closestPlayer = otherPlayer
                end
            end
        end
    end

    return closestPlayer
end

-- Function to update the camera's orientation to look at the closest player
local function updateCamera()
    if isScriptEnabled and isLockingEnabled then
        local closestPlayer = getClosestPlayerToMouse()

        if closestPlayer then
            print("Closest Player Found: " .. closestPlayer.Name)
            if closestPlayer.Character and closestPlayer.Character:FindFirstChild("Head") then
                local targetPosition = closestPlayer.Character.Head.Position
                camera.CFrame = CFrame.new(camera.CFrame.Position, targetPosition)
            end
        else
            print("No Closest Player Found")
        end
    end
end

-- Function to lock the mouse
local function lockMouse()
    userInputService.MouseBehavior = Enum.MouseBehavior.LockCenter
end

-- Function to unlock the mouse
local function unlockMouse()
    userInputService.MouseBehavior = Enum.MouseBehavior.Default
end

-- Function to toggle locking
local function toggleLocking()
    if isScriptEnabled then  -- Ensure locking only works if the script is enabled
        if isLockingEnabled then
            unlockMouse()
            isLockingEnabled = false
            print("Locking Disabled")
        else
            lockMouse()
            isLockingEnabled = true
            print("Locking Enabled")
        end
    end
end

-- Function to toggle script functionality
local function toggleScript()
    isScriptEnabled = not isScriptEnabled
    if isScriptEnabled then
        print("Script Enabled")
    else
        unlockMouse()  -- Ensure mouse is unlocked if script is disabled
        print("Script Disabled")
    end
end

-- Handle mouse button events for locking
userInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and isScriptEnabled then
        if input.UserInputType == Enum.UserInputType.MouseButton2 then  -- Right Mouse Button
            lockMouse()
            isLockingEnabled = true
        elseif input.KeyCode == Enum.KeyCode.L then
            toggleScript()
        end
    end
end)

userInputService.InputEnded:Connect(function(input)
    if isScriptEnabled and input.UserInputType == Enum.UserInputType.MouseButton2 then
        unlockMouse()
        isLockingEnabled = false
    end
end)

-- Update camera orientation in each frame
runService.RenderStepped:Connect(function()
    if isScriptEnabled then
        updateCamera()
    end
end)
