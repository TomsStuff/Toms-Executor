local player = game.Players.LocalPlayer
local mouse = player:GetMouse()
local camera = game.Workspace.CurrentCamera
local runService = game:GetService("RunService")
local userInputService = game:GetService("UserInputService")
local isLocking = false
local targetPlayer = nil -- Store the current target player

-- Function to get the closest player to the mouse position
local function getClosestPlayerToMouse()
    local closestPlayer = nil
    local shortestDistance = math.huge
    
    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("Head") then
            local Head = otherPlayer.Character.Head
            local screenPoint = camera:WorldToScreenPoint(Head.Position)
            local mousePos = Vector2.new(mouse.X, mouse.Y)
            local distance = (Vector2.new(screenPoint.X, screenPoint.Y) - mousePos).magnitude
            
            if distance < shortestDistance then
                shortestDistance = distance
                closestPlayer = otherPlayer
            end
        end
    end
    
    return closestPlayer
end

-- Function to update the camera's orientation to look at the target player
local function updateCamera()
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Head") then
        local targetPosition = targetPlayer.Character.Head.Position
        camera.CFrame = CFrame.new(camera.CFrame.Position, targetPosition)
    end
end

-- Function to lock the mouse
local function lockMouse()
    userInputService.MouseBehavior = Enum.MouseBehavior.LockCenter
end

-- Function to unlock the mouse
local function unlockMouse()
    userInputService.MouseBehavior = Enum.MouseBehavior.Default
end

-- Handle mouse input and camera updates
mouse.Button2Down:Connect(function()
    isLocking = true
    targetPlayer = getClosestPlayerToMouse() -- Set target only once when button is pressed
    lockMouse()
end)

mouse.Button2Up:Connect(function()
    isLocking = false
    targetPlayer = nil -- Clear target when button is released
    unlockMouse()
end)

runService.RenderStepped:Connect(function()
    if isLocking and targetPlayer then
        updateCamera()
    end
end)
