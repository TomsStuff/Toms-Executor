-- Define the services
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Store original boolean values
local originalBooleanValues = {}
local isUpdated = false

-- Function to update boolean values
local function updateBooleanValues(newBoolean)
    if isUpdated then
        return -- If values have already been updated, exit the function
    end

    -- Try to find the "Weapons" folder in ReplicatedStorage
    local weaponsFolder = ReplicatedStorage:FindFirstChild("Weapons")

    -- Check if the "Weapons" folder was found
    if weaponsFolder then
        print("Weapons folder found!")

        for _, weapon in pairs(weaponsFolder:GetChildren()) do
            -- Check if the child is a folder (assuming each weapon is stored in a folder)
            if weapon:IsA("Folder") then
                -- Try to find the Bool value in the weapon folder
                local boolValue = weapon:FindFirstChild("Auto")
                
                -- Check if the Bool value was found and is a BoolValue
                if boolValue and boolValue:IsA("BoolValue") then
                    -- Store original boolean value
                    if not originalBooleanValues[weapon] then
                        originalBooleanValues[weapon] = boolValue.Value
                    end

                    -- Update boolean value
                    boolValue.Value = newBoolean
                    print("Updated boolean for weapon: " .. weapon.Name .. " to value: " .. tostring(newBoolean))
                else
                    print("Bool value not found or is not a BoolValue for weapon: " .. weapon.Name)
                end
            else
                print("Child is not a folder, skipping: " .. weapon.Name)
            end
        end
    else
        print("Weapons folder not found.")
    end

    isUpdated = true -- Set the flag to indicate values have been updated
end

-- Function to reset boolean values to original values
local function resetBooleanValues()
    for weapon, originalBool in pairs(originalBooleanValues) do
        local boolValue = weapon:FindFirstChild("FireRate")
        if boolValue and boolValue:IsA("BoolValue") then
            boolValue.Value = originalBool
            print("Reset boolean for weapon: " .. weapon.Name .. " to value: " .. tostring(originalBool))
        end
    end

    -- Clear the stored values after resetting
    originalBooleanValues = {}
    isUpdated = false -- Reset the flag after values have been reset
end

-- Run the updateBooleanValues function immediately when the script is executed
updateBooleanValues(true) -- Replace true with the desired boolean value that you want to set
