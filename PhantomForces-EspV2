--// vars
local players = workspace.Players

--// services
local run_service = game:GetService("RunService")
local teams = game:GetService("Teams")
local plr_service = game:GetService("Players")
local camera = workspace.CurrentCamera

--// tables
local features = {
    chams = {teamcheck = true, color = {fill = Color3.fromRGB(121, 106, 255), outline = Color3.fromRGB(119, 121, 255)}, transparency = {fill = 0, outline = 0}}
}

local Config = {
    Box                      = true,
    BoxOutline               = true,
    BoxColor                 = Color3.fromRGB(255, 255, 255),
    BoxOutlineColor          = Color3.fromRGB(0, 0, 0),
    HealthBar                = true,
    HealthBarSide            = "Left",
    HealthBarOutlineToggle   = true,
    HealthBarOutlineThickness = 3,
    HealthBarThickness       = 2,
    Names                    = true,
    NamesOutline             = false,
    NamesColor               = Color3.fromRGB(255, 255, 255),
    NamesOutlineColor        = Color3.fromRGB(0, 0, 0),
    NamesFont                = 2,
    NamesSize                = 13,
    Tracers                  = true,
    TracerColor              = Color3.fromRGB(255, 255, 255),
    TracerThickness          = 1,
    TracerOrigin             = "Bottom",
    MaxDistance              = 200
}

--// functions

function get_players()
    local entity_list = {}
    for _, teams in players:GetChildren() do
        for _, player in teams:GetChildren() do
            if player:IsA("Model") then
                entity_list[#entity_list + 1] = player
            end
        end
    end
    return entity_list
end

function is_ally(player)
    if not player then return end

    local helmet = player:FindFirstChildWhichIsA("Folder"):FindFirstChildOfClass("MeshPart")
    if not helmet then return end

    if helmet.BrickColor == BrickColor.new("Black") then
        return teams.Phantoms == plr_service.LocalPlayer.Team, teams.Phantoms
    end

    return teams.Ghosts == plr_service.LocalPlayer.Team, teams.Ghosts
end

function NewLine(thickness, color)
    local line = Drawing.new("Line")
    line.Visible = false
    line.From = Vector2.new(0, 0)
    line.To = Vector2.new(0, 0)
    line.Color = color
    line.Thickness = thickness
    line.Transparency = 1
    return line
end

function CreateEsp(player)
    local Box, BoxOutline, Name, HealthBar, HealthBarOutline = Drawing.new("Square"), Drawing.new("Square"), Drawing.new("Text"), Drawing.new("Square"), Drawing.new("Square")
    local Tracer = NewLine(Config.TracerThickness, Config.TracerColor)
    local TracerBlack = NewLine(Config.TracerThickness * 2, Color3.fromRGB(255, 255, 255)) -- Set tracer background color to white

    local Updater = run_service.RenderStepped:Connect(function()
        if player.Character and player.Character:FindFirstChild("Humanoid") and player.Character:FindFirstChild("HumanoidRootPart") and player.Character.Humanoid.Health > 0 and player.Character:FindFirstChild("Head") then
            local Target2dPosition, IsVisible = camera:WorldToViewportPoint(player.Character.HumanoidRootPart.Position)
            local distance = (camera.CFrame.p - player.Character.HumanoidRootPart.Position).magnitude
            local scale_factor = 1 / (Target2dPosition.Z * math.tan(math.rad(camera.FieldOfView * 0.5)) * 2) * 100
            local width, height = math.floor(40 * scale_factor), math.floor(60 * scale_factor)

            -- Check if the player is within max distance
            if distance <= Config.MaxDistance then
                -- Box
                if Config.Box then
                    Box.Visible = IsVisible
                    Box.Color = Config.BoxColor
                    Box.Size = Vector2.new(width, height)
                    Box.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2, Target2dPosition.Y - Box.Size.Y / 2)
                    Box.Thickness = 1
                    Box.ZIndex = 69

                    if Config.BoxOutline then
                        BoxOutline.Visible = IsVisible
                        BoxOutline.Color = Config.BoxOutlineColor
                        BoxOutline.Size = Vector2.new(width, height)
                        BoxOutline.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2, Target2dPosition.Y - Box.Size.Y / 2)
                        BoxOutline.Thickness = 3
                        BoxOutline.ZIndex = 1
                    else
                        BoxOutline.Visible = false
                    end
                else
                    Box.Visible = false
                    BoxOutline.Visible = false
                end

                -- Name
                if Config.Names then
                    Name.Visible = IsVisible
                    Name.Color = Config.NamesColor
                    Name.Text = player.Name .. " " .. math.floor(distance) .. "m"
                    Name.Center = true
                    Name.Outline = Config.NamesOutline
                    Name.OutlineColor = Config.NamesOutlineColor
                    Name.Position = Vector2.new(Target2dPosition.X, Target2dPosition.Y - height * 0.5 - 15)
                    Name.Font = Config.NamesFont
                    Name.Size = Config.NamesSize
                else
                    Name.Visible = false
                end

                -- HealthBar
                if Config.HealthBar then
                    if Config.HealthBarOutlineToggle then
                        HealthBarOutline.Visible = IsVisible
                        HealthBarOutline.Color = Color3.fromRGB(0, 0, 0)
                        HealthBarOutline.Filled = true
                        HealthBarOutline.ZIndex = 1
                        HealthBarOutline.Size = Vector2.new(Config.HealthBarOutlineThickness, height)
                    else
                        HealthBarOutline.Visible = false
                    end

                    HealthBar.Visible = IsVisible
                    HealthBar.Color = Color3.fromRGB(255, 0, 0):lerp(Color3.fromRGB(0, 255, 0), player.Character.Humanoid.Health / player.Character.Humanoid.MaxHealth)
                    HealthBar.Thickness = Config.HealthBarThickness
                    HealthBar.Filled = true
                    HealthBar.ZIndex = 69

                    -- Adjust health bar position and size
                    if Config.HealthBarSide == "Left" then
                        HealthBarOutline.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2 - 5, Target2dPosition.Y - Box.Size.Y / 2)
                        HealthBar.Size = Vector2.new(1, -(HealthBarOutline.Size.Y - 2) * (player.Character.Humanoid.Health / player.Character.Humanoid.MaxHealth))
                        HealthBar.Position = HealthBarOutline.Position + Vector2.new(1, -1 + HealthBarOutline.Size.Y)
                    elseif Config.HealthBarSide == "Bottom" then
                        HealthBarOutline.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2, Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(0, height + 2)
                        HealthBar.Size = Vector2.new((HealthBarOutline.Size.X - 2) * (player.Character.Humanoid.Health / player.Character.Humanoid.MaxHealth), 1)
                        HealthBar.Position = HealthBarOutline.Position + Vector2.new(1, -1 + HealthBarOutline.Size.Y)
                    elseif Config.HealthBarSide == "Right" then
                        HealthBarOutline.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2 + width + 1, Target2dPosition.Y - Box.Size.Y / 2)
                        HealthBar.Size = Vector2.new(1, -(HealthBarOutline.Size.Y - 2) * (player.Character.Humanoid.Health / player.Character.Humanoid.MaxHealth))
                        HealthBar.Position = HealthBarOutline.Position + Vector2.new(1, -1 + HealthBarOutline.Size.Y)
                    end
                else
                    HealthBar.Visible = false
                    HealthBarOutline.Visible = false
                end

                -- Tracer
                if Config.Tracers then
                    Tracer.Visible = IsVisible
                    Tracer.Color = Config.TracerColor
                    Tracer.Thickness = Config.TracerThickness
                    TracerBlack.Visible = IsVisible
                    TracerBlack.Color = Color3.fromRGB(255, 255, 255)
                    TracerBlack.Thickness = Config.TracerThickness * 2
                    
                    if Config.TracerOrigin == "Middle" then
                        Tracer.From = camera.ViewportSize * 0.5
                        TracerBlack.From = camera.ViewportSize * 0.5
                    elseif Config.TracerOrigin == "Bottom" then
                        Tracer.From = Vector2.new(camera.ViewportSize.X * 0.5, camera.ViewportSize.Y)
                        TracerBlack.From = Vector2.new(camera.ViewportSize.X * 0.5, camera.ViewportSize.Y)
                    end

                    Tracer.To = Vector2.new(Target2dPosition.X, Target2dPosition.Y + height / 2)
                    TracerBlack.To = Vector2.new(Target2dPosition.X, Target2dPosition.Y + height / 2)
                else
                    Tracer.Visible = false
                    TracerBlack.Visible = false
                end
            else
                Box.Visible = false
                BoxOutline.Visible = false
                Name.Visible = false
                HealthBar.Visible = false
                HealthBarOutline.Visible = false
                Tracer.Visible = false
                TracerBlack.Visible = false
            end
        else
            Box.Visible = false
            BoxOutline.Visible = false
            Name.Visible = false
            HealthBar.Visible = false
            HealthBarOutline.Visible = false
            Tracer.Visible = false
            TracerBlack.Visible = false
        end
    end)

    plr_service.PlayerRemoving:Connect(function(RemovedPlayer)
        if RemovedPlayer == player then
            Updater:Disconnect()
            Box:Remove()
            BoxOutline:Remove()
            Name:Remove()
            HealthBar:Remove()
            HealthBarOutline:Remove()
            Tracer:Remove()
            TracerBlack:Remove()
        end
    end)
end

--// logic

for _, player in pairs(plr_service:GetPlayers()) do
    if player ~= plr_service.LocalPlayer then
        CreateEsp(player)
    end
end

plr_service.PlayerAdded:Connect(function(newPlayer)
    newPlayer.CharacterAdded:Wait()
    CreateEsp(newPlayer)
end)
