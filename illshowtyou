-- Variables
local player = game.Players.LocalPlayer
local mouse = player:GetMouse()
local camera = game.Workspace.CurrentCamera
local runService = game:GetService("RunService")
local userInputService = game:GetService("UserInputService")

local isLocking = false
local isScriptActive = true  -- Variable to manage the script's state
local TeamsToIgnore = {"TRC", "TBC"} -- Initial list of team names to ignore

-- Function to get the ignore teams for the local player
local function getIgnoreTeams()
    local ignoreTeams = {}
    local localPlayer = game.Players.LocalPlayer
    if localPlayer and localPlayer.Team then
        for _, teamName in pairs(TeamsToIgnore) do
            if localPlayer.Team.Name == teamName then
                ignoreTeams[teamName] = true
            end
        end
    end
    return ignoreTeams
end

-- Function to check if a player should be ignored based on their team
local function shouldIgnorePlayer(otherPlayer, ignoreTeams)
    return ignoreTeams[otherPlayer.Team.Name] ~= nil
end

-- Function to get the closest player to the mouse position
local function getClosestPlayerToMouse()
    local closestPlayer = nil
    local shortestDistance = math.huge
    local ignoreTeams = getIgnoreTeams()

    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("Head") then
            if not shouldIgnorePlayer(otherPlayer, ignoreTeams) then
                local head = otherPlayer.Character.Head
                local screenPoint = camera:WorldToScreenPoint(head.Position)
                local mousePos = Vector2.new(mouse.X, mouse.Y)
                local distance = (Vector2.new(screenPoint.X, screenPoint.Y) - mousePos).magnitude

                if screenPoint.Z > 0 and screenPoint.X >= 0 and screenPoint.X <= camera.ViewportSize.X and screenPoint.Y >= 0 and screenPoint.Y <= camera.ViewportSize.Y then
                    if distance < shortestDistance then
                        shortestDistance = distance
                        closestPlayer = otherPlayer
                    end
                end
            end
        end
    end

    return closestPlayer
end

-- Function to update the camera's orientation to look at the closest player
local function updateCamera()
    local closestPlayer = getClosestPlayerToMouse()

    if closestPlayer and closestPlayer.Character and closestPlayer.Character:FindFirstChild("Head") then
        local targetPosition = closestPlayer.Character.Head.Position
        camera.CFrame = CFrame.new(camera.CFrame.Position, targetPosition)
    end
end

-- Function to lock the mouse
local function lockMouse()
    userInputService.MouseBehavior = Enum.MouseBehavior.LockCenter
end

-- Function to unlock the mouse
local function unlockMouse()
    userInputService.MouseBehavior = Enum.MouseBehavior.Default
end

-- Handle mouse input and camera updates
mouse.Button2Down:Connect(function()
    if isScriptActive then
        isLocking = true
        lockMouse()
    end
end)

mouse.Button2Up:Connect(function()
    if isScriptActive then
        isLocking = false
        unlockMouse()
    end
end)

runService.RenderStepped:Connect(function()
    if isScriptActive and isLocking then
        updateCamera()
    end
end)

-- Keybind for toggling the script on and off
local toggleKey = Enum.KeyCode.L -- You can change this to any key you prefer

userInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if not gameProcessedEvent and input.KeyCode == toggleKey then
        isScriptActive = not isScriptActive
        if not isScriptActive then
            -- If the script is being deactivated, unlock the mouse
            unlockMouse()
            isLocking = false
        end
    end
end)
